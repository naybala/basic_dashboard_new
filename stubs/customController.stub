<?php

namespace $NAMESPACE$;

use Garment\$PATH_NAME$\Common\BaseController;
use $PROJECT_NAME$\$PATH_NAME$\$FOLDER_NAME$\Services\$CAPITAL$Service;
use $PROJECT_NAME$\$PATH_NAME$\$FOLDER_NAME$\Validation\Store$CAPITAL$Request;
use $PROJECT_NAME$\$PATH_NAME$\$FOLDER_NAME$\Validation\Update$CAPITAL$Request;
use $PROJECT_NAME$\$PATH_NAME$\$FOLDER_NAME$\Validation\Delete$CAPITAL$Request;
use Illuminate\Http\Request;
use Illuminate\View\View;
use Illuminate\Http\RedirectResponse;


class $CLASS_NAME$ extends BaseController
{
    public function __construct(
        private $CAPITAL$Service $$CAMEL_CASE$Service
    ) {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function index(Request $request)
    {
        return $this->$CAMEL_CASE$Service->index($request);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function create()
    {
        return $this->$CAMEL_CASE$Service->create();
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function store(Store$CAPITAL$Request $request)
    {
        return $this->$CAMEL_CASE$Service->store($request->validated());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function edit(string $id)
    {
        return $this->$CAMEL_CASE$Service->edit($id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function update(Update$CAPITAL$Request $request, string $id)
    {
        return $this->$CAMEL_CASE$Service->update($request->validated(), $id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function destroy(Delete$CAPITAL$Request $request)
    {
        return $this->$CAMEL_CASE$Service->destroy($request->validated());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////
}
